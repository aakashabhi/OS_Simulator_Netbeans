/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package os_simulator;

import javax.swing.JOptionPane;

/**
 *
 * @author Aakash Chandra
 */
public class PagingTechnique extends javax.swing.JFrame {

    /**
     * Creates new form PagingTechnique
     */
    public PagingTechnique() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        psTextField = new javax.swing.JTextField();
        vsTextField = new javax.swing.JTextField();
        pageTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("PAGING TECHNIQUE With Virtual Memory");

        jLabel2.setText("Enter Virtual Memory Size in KB");

        jLabel3.setText("Enter Physical Memory Size in KB");

        jLabel4.setText("Enter Size of Page in KB ");

        vsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vsTextFieldActionPerformed(evt);
            }
        });

        jButton1.setText("CALCULATE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setText("<-BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 75, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(58, 58, 58))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(psTextField)
                                .addComponent(pageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(vsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(vsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(psTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(pageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(jButton1)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void vsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vsTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vsTextFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         int vs,ps, page;
        
        vs=Integer.parseInt(vsTextField.getText());
        ps=Integer.parseInt(psTextField.getText());
        page=Integer.parseInt(pageTextField.getText());
        
        //Calculating number of pages in virtual and physical memory
        int nv=vs/page,np=ps/page;
        
        JOptionPane.showMessageDialog(null, "Number of pages in Virtual Memory: " + nv + "\nNumber of pages in Physical Memory: " + np);
        
        //Declaring vars for pagetable and frames
        int pagetable[] = new int[nv];
        int frames[][] = new int[2][np];
        //Bool set to check if frame occupied or not
        int fs[] = new int[np];
        
        //Initializing frame table and page table
        for(int i=0;i<nv;i++)
            pagetable[i]=-1;
        
        for(int i=0;i<np;i++){
            frames[0][i]=-1;
            fs[i]=0;
        }
        
        //Declaring vars
        int op=1,input=0,curr=0,faults=0,i;
        
        while(op==1){
            
            op = Integer.parseInt(JOptionPane.showInputDialog(null, "1. Add page in frame\t2.Stop Adding\nEnter your choice: "));
            
            if(op==1){
                
                int pgno,offset;
                
                pgno = Integer.parseInt(JOptionPane.showInputDialog(null, "Page no = "));
                
                if(pgno>nv){
                    JOptionPane.showMessageDialog(null, "Page can't exist due to Virtual Memory Constraint");
                    continue;
                }
                
                offset = Integer.parseInt(JOptionPane.showInputDialog(null, "Offset = "));
                
                input++;
                
                int flag=0;
                
                for (i=0;i<np;i++)      //checking if page already allocated
                {
                    if (frames[0][i]==pgno)
                    {
                        flag=1;
                        break;
                    }
                }
                
                if(flag==1){               //Declaring position and changing offset if already allocated
                    JOptionPane.showMessageDialog(null, "P" + pgno + " is already present in F" + i + "\nOffset: " + offset);
                    frames[1][i]=offset;
                    flag=0;
                    continue;
                }
                
                //Checking if extra frames are present
                if(fs[curr]==0){
                    frames[0][curr]=pgno;
                    frames[1][curr]=offset;
                    fs[curr]=1;
                    pagetable[pgno]=curr;
                    JOptionPane.showMessageDialog(null, "P" + pgno + " is accommodated in F" + curr + "\nOffset: " + offset);
                    faults++;
                    curr=(curr+1)%np;
                    continue;
                }
                
                //Allocating the new page in replace of the oldest page present in the frames as per FIFO
                JOptionPane.showMessageDialog(null, "P" + pgno + " is accommodated in F" + curr + " after removing P" + frames[0][curr]);
                pagetable[frames[0][curr]]=-1;

                frames[0][curr]=pgno;
                frames[1][curr]=offset;
                pagetable[pgno]=curr;
                faults++;
            
                JOptionPane.showMessageDialog(null, "The Physical Address for the above virtual address is:" + "\nFrame: " + curr + "\nOffset: " + offset);
                
                curr=(curr+1)%np;
            }
            else
                break;
        }
        //Displaying final output
        
        String message = "No of page faults = " + faults + "\n";
        message += "Page fault ratio = " + (float)faults/(float)(input)+ "\n";
        message += "Page number - Frame number\n";
        for (i=0;i<nv;i++)
            message += i + " - " + pagetable[i] + "\n";
        JOptionPane.showMessageDialog(null, message);
        
        message = "\nMemory Table";
        message += "\nFrame Number - Page Contained\n";
        for(i=0;i<np;i++)
            message += i + " - " + frames[0][i] + "\n";
        JOptionPane.showMessageDialog(null, message);
        
        return;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         new MainPage().setVisible(true);
         this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PagingTechnique.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PagingTechnique.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PagingTechnique.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PagingTechnique.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PagingTechnique().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField pageTextField;
    private javax.swing.JTextField psTextField;
    private javax.swing.JTextField vsTextField;
    // End of variables declaration//GEN-END:variables
}
